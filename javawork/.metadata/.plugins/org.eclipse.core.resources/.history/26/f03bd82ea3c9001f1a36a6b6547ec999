package day0103db;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class Ex5MysqlInsertSelect {
	static final String MYSQL_DRIVER="com.mysql.cj.jdbc.Driver";
	String url="jdbc:mysql://localhost:3306/study502?serverTimezone=Asia/Seoul";
	String username="root";
	String pw="0000";

	public Ex5MysqlInsertSelect() {
		try {
			Class.forName(MYSQL_DRIVER);
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			System.out.println("Mysql 드라이버 오류: "+e.getMessage());
		}
	}

	public Connection getConnection() {
		Connection conn=null;
		try {
			conn = DriverManager.getConnection(url,username,pw);
		} catch (SQLException e) {
			// TODO: handle exception
		}
		return conn;
	}

	public void insertPerson(String name, String blood, int age, String hp) {
		Connection conn = null;
		Statement stmt = null;
		String sql="insert into person(name,age,blood,hp,today) values("+"'"+name+"',"+age+",'"+blood.toUpperCase()+"','"+hp+"', now())";
		System.out.println(sql);

		conn = this.getConnection();
		try {
			stmt=conn.createStatement();
			// insert문 실행
			stmt.execute(sql);
			System.out.println("db에 데이터를 추가했습니다.");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				stmt.close();
				conn.close();
			} catch (SQLException|NullPointerException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}

	public void writePerson() {
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		String sql="select * from person order by num";

		conn=this.getConnection();
		try {
			stmt=conn.createStatement();
			rs=stmt.executeQuery(sql);
			System.out.println("\t\t** Person Table **");
			System.out.println("이름\t나이\t혈액형\t핸드폰\t\t날짜");
			System.out.println("=".repeat(50));

			while(rs.next()) {
				String today=rs.getString("today").substring(0,10);
				System.out.println(rs.getString("name")+"\t"
						+rs.getInt("age")+"\t"+
						rs.getString("blood")+"\t"+
						rs.getString("hp")+"\t"+today);
			}
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
		} finally {
			try {
				rs.close();
				stmt.close();
				conn.close();
			} catch (SQLException|NullPointerException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	// 이름 검색해서 출력하는 메서드
	public void searchName(String name) {
		int cnt=0; // 찾은 인원 수를 얻을 변수
		/*
		 * 문제 : name이 '영자'인 경우 영자를 포함하는 모든 데이터 출력
		 * 
		 * 예:
		 * 1번째
		 * 이름 : 김영자
		 * 혈액형 : B형
		 * 나이: 23세
		 * 핸드폰: 010-2222-3333
		 * ---------------------
		 * 2번째
		 * 이름 : 박영자
		 * ...
		 * 
		 * 만약 없을 경우
		 * 	"영자"를 포함한 회원은 없습니다.
		 */
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		String sql="select * from person where name like '%"+name+"%'";
		conn=this.getConnection();
		int i=1;
		int count=0;
		try {
			stmt=conn.createStatement();
			rs = stmt.executeQuery(sql);
			while (true) {
				if (rs.next()) {
					System.out.println(i+"번째");
					System.out.println("이름 : "+ rs.getString("name"));
					System.out.println("혈액형 : "+rs.getString("blood"));
					System.out.println("나이 : "+rs.getInt("age"));
					System.out.println("핸드폰 : "+rs.getString("hp"));
					System.out.println("-".repeat(30));
					i++;
					cnt++;
				} else if (cnt==0){
					System.out.println("\""+name+"\"을 포함한 회원은 없습니다.");
					i=0;
					count=0;
					break;
				}
			}

		} catch (SQLException|NullPointerException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Ex5MysqlInsertSelect ex5 = new Ex5MysqlInsertSelect();
		Scanner sc = new Scanner(System.in);

		while(true) {
			System.out.println("1. 데이터 추가 2. 전체 출력 3. 이름 검색 5. 종료");
			System.out.println("select menu?");
			int menu = Integer.parseInt(sc.nextLine());

			switch(menu) {
			case 1: {
				System.out.println("데이터를 추가합니다.");
				System.out.println("이름 입력");
				String name=sc.nextLine();
				System.out.println("혈액형 입력");
				String blood=sc.nextLine();
				System.out.println("나이 입력");
				int age=Integer.parseInt(sc.nextLine());
				System.out.println("핸드폰 입력");
				String hp=sc.nextLine();

				ex5.insertPerson(name, blood, age, hp);
				break;
			}
			case 2: {
				ex5.writePerson();
				break;
			}
			case 3: {
				System.out.println("검색할 이름 입력");
				String name = sc.nextLine();
				ex5.searchName(name);
				break;
			}
			default: {
				System.out.println("** 프로그램 종료. **");
				System.exit(0);;
			}
			}
		}

	}

}
